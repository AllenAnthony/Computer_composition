////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : loat_mul.vf
// /___/   /\     Timestamp : 04/13/2016 21:22:01
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/CST/Desktop/alu_new/alu/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Users/CST/Desktop/alu_new/alu/loat_mul.vf -w C:/Users/CST/Desktop/alu_new/alu/loat_mul.sch
//Design Name: loat_mul
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module mux_8_MUSER_loat_mul(A, 
                            B, 
                            S, 
                            C);

    input [7:0] A;
    input [7:0] B;
    input S;
   output [7:0] C;
   
   wire XLXN_15;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   
   AND2  XLXI_1 (.I0(XLXN_15), 
                .I1(B[0]), 
                .O(XLXN_39));
   AND2  XLXI_2 (.I0(XLXN_15), 
                .I1(B[1]), 
                .O(XLXN_40));
   AND2  XLXI_3 (.I0(XLXN_15), 
                .I1(B[2]), 
                .O(XLXN_41));
   AND2  XLXI_4 (.I0(XLXN_15), 
                .I1(B[3]), 
                .O(XLXN_42));
   AND2  XLXI_5 (.I0(XLXN_15), 
                .I1(B[4]), 
                .O(XLXN_43));
   AND2  XLXI_6 (.I0(XLXN_15), 
                .I1(B[5]), 
                .O(XLXN_44));
   AND2  XLXI_7 (.I0(XLXN_15), 
                .I1(B[6]), 
                .O(XLXN_45));
   AND2  XLXI_8 (.I0(XLXN_15), 
                .I1(B[7]), 
                .O(XLXN_46));
   AND2  XLXI_9 (.I0(S), 
                .I1(A[0]), 
                .O(XLXN_47));
   AND2  XLXI_10 (.I0(S), 
                 .I1(A[1]), 
                 .O(XLXN_48));
   AND2  XLXI_11 (.I0(S), 
                 .I1(A[2]), 
                 .O(XLXN_49));
   AND2  XLXI_12 (.I0(S), 
                 .I1(A[3]), 
                 .O(XLXN_50));
   AND2  XLXI_13 (.I0(S), 
                 .I1(A[4]), 
                 .O(XLXN_51));
   AND2  XLXI_14 (.I0(S), 
                 .I1(A[5]), 
                 .O(XLXN_52));
   AND2  XLXI_15 (.I0(S), 
                 .I1(A[6]), 
                 .O(XLXN_53));
   AND2  XLXI_16 (.I0(S), 
                 .I1(A[7]), 
                 .O(XLXN_54));
   INV  XLXI_17 (.I(S), 
                .O(XLXN_15));
   OR2  XLXI_18 (.I0(XLXN_39), 
                .I1(XLXN_47), 
                .O(C[0]));
   OR2  XLXI_19 (.I0(XLXN_40), 
                .I1(XLXN_48), 
                .O(C[1]));
   OR2  XLXI_20 (.I0(XLXN_41), 
                .I1(XLXN_49), 
                .O(C[2]));
   OR2  XLXI_21 (.I0(XLXN_42), 
                .I1(XLXN_50), 
                .O(C[3]));
   OR2  XLXI_22 (.I0(XLXN_43), 
                .I1(XLXN_51), 
                .O(C[4]));
   OR2  XLXI_23 (.I0(XLXN_44), 
                .I1(XLXN_52), 
                .O(C[5]));
   OR2  XLXI_24 (.I0(XLXN_45), 
                .I1(XLXN_53), 
                .O(C[6]));
   OR2  XLXI_25 (.I0(XLXN_46), 
                .I1(XLXN_54), 
                .O(C[7]));
endmodule
`timescale 1ns / 1ps

module mux_32_MUSER_loat_mul(A, 
                             B, 
                             S, 
                             C);

    input [31:0] A;
    input [31:0] B;
    input S;
   output [31:0] C;
   
   
   mux_8_MUSER_loat_mul  XLXI_1 (.A(A[7:0]), 
                                .B(B[7:0]), 
                                .S(S), 
                                .C(C[7:0]));
   mux_8_MUSER_loat_mul  XLXI_2 (.A(A[15:8]), 
                                .B(B[15:8]), 
                                .S(S), 
                                .C(C[15:8]));
   mux_8_MUSER_loat_mul  XLXI_3 (.A(A[23:16]), 
                                .B(B[23:16]), 
                                .S(S), 
                                .C(C[23:16]));
   mux_8_MUSER_loat_mul  XLXI_4 (.A(A[31:24]), 
                                .B(B[31:24]), 
                                .S(S), 
                                .C(C[31:24]));
endmodule
`timescale 1ns / 1ps

module check_cin_MUSER_loat_mul(A, 
                                CIN, 
                                n, 
                                TE, 
                                TM);

    input [31:0] A;
    input CIN;
    input [31:0] n;
   output [31:0] TE;
   output [31:0] TM;
   
   wire [31:0] XLXN_6;
   wire XLXN_8;
   wire [31:0] XLXN_9;
   wire [31:0] XLXN_11;
   
   mux_32_MUSER_loat_mul  XLXI_1 (.A(XLXN_9[31:0]), 
                                 .B(n[31:0]), 
                                 .S(CIN), 
                                 .C(TE[31:0]));
   mux_32_MUSER_loat_mul  XLXI_2 (.A(XLXN_11[31:0]), 
                                 .B(A[31:0]), 
                                 .S(CIN), 
                                 .C(TM[31:0]));
   bit1to32  XLXI_5 (.A(CIN), 
                    .B(XLXN_6[31:0]));
   adder32  XLXI_6 (.A(XLXN_6[31:0]), 
                   .B(n[31:0]), 
                   .mode(XLXN_8), 
                   .CF(), 
                   .overflow(), 
                   .S(XLXN_9[31:0]), 
                   .SF(), 
                   .ZF());
   GND  XLXI_7 (.G(XLXN_8));
   shift_rignt1  XLXI_8 (.A(A[31:0]), 
                        .B(XLXN_11[31:0]));
endmodule
`timescale 1ns / 1ps

module loat_mul(A, 
                B, 
                clk, 
                C);

    input [31:0] A;
    input [31:0] B;
    input clk;
   output [31:0] C;
   
   wire FU;
   wire [63:0] H;
   wire [31:0] XLXN_10;
   wire [31:0] XLXN_11;
   wire XLXN_13;
   wire [31:0] XLXN_14;
   wire [31:0] XLXN_15;
   wire XLXN_16;
   wire [31:0] XLXN_22;
   wire [31:0] XLXN_23;
   wire [31:0] XLXN_33;
   wire [31:0] XLXN_34;
   wire [31:0] XLXN_35;
   wire XLXN_41;
   wire [31:0] XLXN_42;
   wire [31:0] XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire [31:0] XLXN_47;
   wire [31:0] XLXN_48;
   wire XLXN_51;
   wire XLXN_52;
   
   XOR2  XLXI_1 (.I0(A[31]), 
                .I1(B[31]), 
                .O(FU));
   bit8to32  XLXI_2 (.A(A[30:23]), 
                    .B(XLXN_10[31:0]));
   bit8to32  XLXI_3 (.A(B[30:23]), 
                    .B(XLXN_11[31:0]));
   num_7F  XLXI_4 (.C(XLXN_14[31:0]));
   adder32  XLXI_5 (.A(XLXN_10[31:0]), 
                   .B(XLXN_11[31:0]), 
                   .mode(XLXN_13), 
                   .CF(), 
                   .overflow(), 
                   .S(XLXN_15[31:0]), 
                   .SF(), 
                   .ZF());
   GND  XLXI_6 (.G(XLXN_13));
   adder32  XLXI_7 (.A(XLXN_15[31:0]), 
                   .B(XLXN_14[31:0]), 
                   .mode(XLXN_16), 
                   .CF(), 
                   .overflow(), 
                   .S(XLXN_33[31:0]), 
                   .SF(), 
                   .ZF());
   VCC  XLXI_8 (.P(XLXN_16));
   bit23to32  XLXI_11 (.A(B[22:0]), 
                      .B(XLXN_23[31:0]));
   bit23to32  XLXI_12 (.A(A[22:0]), 
                      .B(XLXN_22[31:0]));
   check_cin_MUSER_loat_mul  XLXI_15 (.A(H[54:23]), 
                                     .CIN(H[47]), 
                                     .n(XLXN_33[31:0]), 
                                     .TE(XLXN_34[31:0]), 
                                     .TM(XLXN_35[31:0]));
   zhenghe  XLXI_16 (.FE(XLXN_34[31:0]), 
                    .FM(XLXN_35[31:0]), 
                    .FU(FU), 
                    .O(XLXN_43[31:0]));
   mux_32_MUSER_loat_mul  XLXI_18 (.A(XLXN_42[31:0]), 
                                  .B(XLXN_43[31:0]), 
                                  .S(XLXN_41), 
                                  .C(XLXN_48[31:0]));
   ifinf  XLXI_25 (.A(A[31:0]), 
                  .B(XLXN_44));
   ifinf  XLXI_26 (.A(B[31:0]), 
                  .B(XLXN_45));
   OR2  XLXI_27 (.I0(XLXN_45), 
                .I1(XLXN_44), 
                .O(XLXN_46));
   numinf  XLXI_28 (.A(XLXN_47[31:0]));
   mux_32_MUSER_loat_mul  XLXI_29 (.A(XLXN_47[31:0]), 
                                  .B(XLXN_48[31:0]), 
                                  .S(XLXN_46), 
                                  .C(C[31:0]));
   if0  XLXI_30 (.A(B[31:0]), 
                .B(XLXN_52));
   if0  XLXI_31 (.A(A[31:0]), 
                .B(XLXN_51));
   OR2  XLXI_32 (.I0(XLXN_51), 
                .I1(XLXN_52), 
                .O(XLXN_41));
   num0  XLXI_33 (.A(XLXN_42[31:0]));
   mut_u  XLXI_37 (.ain(XLXN_22[31:0]), 
                  .bin(XLXN_23[31:0]), 
                  .clk(clk), 
                  .done(), 
                  .yout(H[63:0]));
endmodule
