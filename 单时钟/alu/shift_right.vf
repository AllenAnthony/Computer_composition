////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : shift_right.vf
// /___/   /\     Timestamp : 04/07/2016 15:43:31
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/Richard/Desktop/ADD/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Users/Richard/Desktop/ADD/shift_right.vf -w C:/Users/Richard/Desktop/ADD/shift_right.sch
//Design Name: shift_right
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module mux_8_MUSER_shift_right(A, 
                               B, 
                               S, 
                               C);

    input [7:0] A;
    input [7:0] B;
    input S;
   output [7:0] C;
   
   wire XLXN_15;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   
   AND2  XLXI_1 (.I0(XLXN_15), 
                .I1(B[0]), 
                .O(XLXN_39));
   AND2  XLXI_2 (.I0(XLXN_15), 
                .I1(B[1]), 
                .O(XLXN_40));
   AND2  XLXI_3 (.I0(XLXN_15), 
                .I1(B[2]), 
                .O(XLXN_41));
   AND2  XLXI_4 (.I0(XLXN_15), 
                .I1(B[3]), 
                .O(XLXN_42));
   AND2  XLXI_5 (.I0(XLXN_15), 
                .I1(B[4]), 
                .O(XLXN_43));
   AND2  XLXI_6 (.I0(XLXN_15), 
                .I1(B[5]), 
                .O(XLXN_44));
   AND2  XLXI_7 (.I0(XLXN_15), 
                .I1(B[6]), 
                .O(XLXN_45));
   AND2  XLXI_8 (.I0(XLXN_15), 
                .I1(B[7]), 
                .O(XLXN_46));
   AND2  XLXI_9 (.I0(S), 
                .I1(A[0]), 
                .O(XLXN_47));
   AND2  XLXI_10 (.I0(S), 
                 .I1(A[1]), 
                 .O(XLXN_48));
   AND2  XLXI_11 (.I0(S), 
                 .I1(A[2]), 
                 .O(XLXN_49));
   AND2  XLXI_12 (.I0(S), 
                 .I1(A[3]), 
                 .O(XLXN_50));
   AND2  XLXI_13 (.I0(S), 
                 .I1(A[4]), 
                 .O(XLXN_51));
   AND2  XLXI_14 (.I0(S), 
                 .I1(A[5]), 
                 .O(XLXN_52));
   AND2  XLXI_15 (.I0(S), 
                 .I1(A[6]), 
                 .O(XLXN_53));
   AND2  XLXI_16 (.I0(S), 
                 .I1(A[7]), 
                 .O(XLXN_54));
   INV  XLXI_17 (.I(S), 
                .O(XLXN_15));
   OR2  XLXI_18 (.I0(XLXN_39), 
                .I1(XLXN_47), 
                .O(C[0]));
   OR2  XLXI_19 (.I0(XLXN_40), 
                .I1(XLXN_48), 
                .O(C[1]));
   OR2  XLXI_20 (.I0(XLXN_41), 
                .I1(XLXN_49), 
                .O(C[2]));
   OR2  XLXI_21 (.I0(XLXN_42), 
                .I1(XLXN_50), 
                .O(C[3]));
   OR2  XLXI_22 (.I0(XLXN_43), 
                .I1(XLXN_51), 
                .O(C[4]));
   OR2  XLXI_23 (.I0(XLXN_44), 
                .I1(XLXN_52), 
                .O(C[5]));
   OR2  XLXI_24 (.I0(XLXN_45), 
                .I1(XLXN_53), 
                .O(C[6]));
   OR2  XLXI_25 (.I0(XLXN_46), 
                .I1(XLXN_54), 
                .O(C[7]));
endmodule
`timescale 1ns / 1ps

module mux_32_MUSER_shift_right(A, 
                                B, 
                                S, 
                                C);

    input [31:0] A;
    input [31:0] B;
    input S;
   output [31:0] C;
   
   
   mux_8_MUSER_shift_right  XLXI_1 (.A(A[7:0]), 
                                   .B(B[7:0]), 
                                   .S(S), 
                                   .C(C[7:0]));
   mux_8_MUSER_shift_right  XLXI_2 (.A(A[15:8]), 
                                   .B(B[15:8]), 
                                   .S(S), 
                                   .C(C[15:8]));
   mux_8_MUSER_shift_right  XLXI_3 (.A(A[23:16]), 
                                   .B(B[23:16]), 
                                   .S(S), 
                                   .C(C[23:16]));
   mux_8_MUSER_shift_right  XLXI_4 (.A(A[31:24]), 
                                   .B(B[31:24]), 
                                   .S(S), 
                                   .C(C[31:24]));
endmodule
`timescale 1ns / 1ps

module shift_right(A, 
                   n, 
                   B);

    input [31:0] A;
    input [7:0] n;
   output [31:0] B;
   
   wire [31:0] XLXN_14;
   wire [31:0] XLXN_16;
   wire [31:0] XLXN_17;
   wire [31:0] XLXN_20;
   wire [31:0] XLXN_21;
   wire [31:0] XLXN_23;
   wire [31:0] XLXN_24;
   wire [31:0] XLXN_26;
   wire [31:0] XLXN_27;
   wire [31:0] XLXN_29;
   wire [31:0] XLXN_30;
   wire XLXN_35;
   
   mux_32_MUSER_shift_right  XLXI_5 (.A(XLXN_17[31:0]), 
                                    .B(XLXN_16[31:0]), 
                                    .S(n[1]), 
                                    .C(XLXN_20[31:0]));
   mux_32_MUSER_shift_right  XLXI_6 (.A(XLXN_21[31:0]), 
                                    .B(XLXN_20[31:0]), 
                                    .S(n[2]), 
                                    .C(XLXN_23[31:0]));
   mux_32_MUSER_shift_right  XLXI_7 (.A(XLXN_24[31:0]), 
                                    .B(XLXN_23[31:0]), 
                                    .S(n[3]), 
                                    .C(XLXN_27[31:0]));
   mux_32_MUSER_shift_right  XLXI_9 (.A(XLXN_14[31:0]), 
                                    .B(A[31:0]), 
                                    .S(n[0]), 
                                    .C(XLXN_16[31:0]));
   mux_32_MUSER_shift_right  XLXI_14 (.A(XLXN_26[31:0]), 
                                     .B(XLXN_27[31:0]), 
                                     .S(n[4]), 
                                     .C(XLXN_29[31:0]));
   mux_32_MUSER_shift_right  XLXI_15 (.A(XLXN_30[31:0]), 
                                     .B(XLXN_29[31:0]), 
                                     .S(XLXN_35), 
                                     .C(B[31:0]));
   OR3  XLXI_16 (.I0(n[5]), 
                .I1(n[6]), 
                .I2(n[7]), 
                .O(XLXN_35));
   shift_rignt1  XLXI_17 (.A(A[31:0]), 
                         .B(XLXN_14[31:0]));
   shift_right2  XLXI_18 (.A(XLXN_16[31:0]), 
                         .B(XLXN_17[31:0]));
   shift_rignt4  XLXI_19 (.A(XLXN_20[31:0]), 
                         .B(XLXN_21[31:0]));
   shift_right8  XLXI_20 (.A(XLXN_23[31:0]), 
                         .B(XLXN_24[31:0]));
   shift_right16  XLXI_21 (.A(XLXN_27[31:0]), 
                          .B(XLXN_26[31:0]));
   shift_right32  XLXI_22 (.A(XLXN_29[31:0]), 
                          .B(XLXN_30[31:0]));
endmodule
