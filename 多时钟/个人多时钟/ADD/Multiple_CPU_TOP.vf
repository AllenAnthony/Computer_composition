////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.4
//  \   \         Application : sch2hdl
//  /   /         Filename : Multiple_CPU_TOP.vf
// /___/   /\     Timestamp : 06/16/2016 00:09:16
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/asus/Desktop/ADD/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Users/asus/Desktop/ADD/Multiple_CPU_TOP.vf -w C:/Users/asus/Desktop/ADD/Multiple_CPU_TOP.sch
//Design Name: Multiple_CPU_TOP
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Multiple_CPU_TOP(clk_100Mhz, 
                        in_addr, 
                        out_data);

    input clk_100Mhz;
    input [4:0] in_addr;
   output [31:0] out_data;
   
   wire [31:0] ALUO;
   wire [1:0] ALUop;
   wire ALUsrcA;
   wire [1:0] ALUsrcB;
   wire [31:0] BOUT;
   wire IorD;
   wire [31:0] IRW;
   wire IRwrite;
   wire MemRead;
   wire MemtoReg;
   wire MemWrite;
   wire N0;
   wire [31:0] PCIN;
   wire [1:0] PCsource;
   wire [31:0] PCW;
   wire PCwrite;
   wire PCwriteCond;
   wire [31:0] PCWWW;
   wire RegDst;
   wire RegWrite;
   wire V5;
   wire [31:0] XLXN_10;
   wire [31:0] XLXN_11;
   wire [4:0] XLXN_12;
   wire [31:0] XLXN_15;
   wire [31:0] XLXN_16;
   wire [31:0] XLXN_18;
   wire [31:0] XLXN_19;
   wire [31:0] XLXN_20;
   wire [31:0] XLXN_21;
   wire [2:0] XLXN_23;
   wire [31:0] XLXN_24;
   wire [31:0] XLXN_25;
   wire [27:0] XLXN_65;
   wire [31:0] XLXN_67;
   wire XLXN_78;
   wire XLXN_79;
   wire [31:0] XLXN_102;
   wire zero;
   
   REG32_N  A (.clk(clk_100Mhz), 
              .D(XLXN_15[31:0]), 
              .Q(XLXN_18[31:0]));
   alu32  ALU (.A(XLXN_19[31:0]), 
              .B(XLXN_20[31:0]), 
              .ins(XLXN_23[2:0]), 
              .O(XLXN_21[31:0]), 
              .Z(zero));
   REG32_N  ALUout (.clk(clk_100Mhz), 
                   .D(XLXN_21[31:0]), 
                   .Q(ALUO[31:0]));
   REG32_N  B (.clk(clk_100Mhz), 
              .D(XLXN_16[31:0]), 
              .Q(BOUT[31:0]));
   control  ctrl (.clk(clk_100Mhz), 
                 .Instruction(IRW[31:0]), 
                 .ALUop(ALUop[1:0]), 
                 .ALUsrcA(ALUsrcA), 
                 .ALUsrcB(ALUsrcB[1:0]), 
                 .IorD(IorD), 
                 .IRwrite(IRwrite), 
                 .MemRead(MemRead), 
                 .MemtoReg(MemtoReg), 
                 .MemWrite(MemWrite), 
                 .PCsource(PCsource[1:0]), 
                 .PCwrite(PCwrite), 
                 .PCwriteCond(PCwriteCond), 
                 .RegDst(RegDst), 
                 .RegWrite(RegWrite));
   REG32_NC  IR (.CE(IRwrite), 
                .D(XLXN_102[31:0]), 
                .Q(IRW[31:0]));
   REG32_N_NC  MDR (.D(XLXN_102[31:0]), 
                   .Q(XLXN_10[31:0]));
   Memory  MEM (.addr(PCWWW[14:0]), 
               .clk(clk_100Mhz), 
               .memread(MemRead), 
               .memwrite(MemWrite), 
               .wdata(BOUT[31:0]), 
               .Ins(XLXN_102[31:0]));
   REG32  PC (.CE(XLXN_78), 
             .clk(clk_100Mhz), 
             .D(PCIN[31:0]), 
             .Q(PCW[31:0]));
   regfile  REGF (.a1(IRW[25:21]), 
                 .a2(IRW[20:16]), 
                 .a3(in_addr[4:0]), 
                 .clk(clk_100Mhz), 
                 .wdata(XLXN_11[31:0]), 
                 .wr(RegWrite), 
                 .wreg(XLXN_12[4:0]), 
                 .d1(XLXN_15[31:0]), 
                 .d2(XLXN_16[31:0]), 
                 .d3(out_data[31:0]));
   MUX2T1_32  XLXI_27 (.I0(PCW[31:0]), 
                      .I1(ALUO[31:0]), 
                      .s(IorD), 
                      .o(PCWWW[31:0]));
   MUX2T1_32  XLXI_28 (.I0(ALUO[31:0]), 
                      .I1(XLXN_10[31:0]), 
                      .s(MemtoReg), 
                      .o(XLXN_11[31:0]));
   MUX2T1_5  XLXI_29 (.I0(IRW[20:16]), 
                     .I1(IRW[15:11]), 
                     .s(RegDst), 
                     .o(XLXN_12[4:0]));
   MUX4T1_32  XLXI_33 (.I0(BOUT[31:0]), 
                      .I1({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, V5, 
         N0, N0}), 
                      .I2(XLXN_25[31:0]), 
                      .I3(XLXN_24[31:0]), 
                      .s(ALUsrcB[1:0]), 
                      .o(XLXN_20[31:0]));
   MUX2T1_32  XLXI_34 (.I0(PCW[31:0]), 
                      .I1(XLXN_18[31:0]), 
                      .s(ALUsrcA), 
                      .o(XLXN_19[31:0]));
   ALUcontrol  XLXI_36 (.ALUop(ALUop[1:0]), 
                       .Func(IRW[5:0]), 
                       .ALUoper(XLXN_23[2:0]));
   shiftleft2  XLXI_37 (.A(XLXN_25[31:0]), 
                       .B(XLXN_24[31:0]));
   SignExtend  XLXI_38 (.A(IRW[15:0]), 
                       .B(XLXN_25[31:0]));
   VCC  XLXI_39 (.P(V5));
   GND  XLXI_40 (.G(N0));
   AND2  XLXI_41 (.I0(zero), 
                 .I1(PCwriteCond), 
                 .O(XLXN_79));
   OR2  XLXI_42 (.I0(XLXN_79), 
                .I1(PCwrite), 
                .O(XLXN_78));
   MUX4T1_32  XLXI_45 (.I0(XLXN_21[31:0]), 
                      .I1(ALUO[31:0]), 
                      .I2(XLXN_67[31:0]), 
                      .I3({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0}), 
                      .s(PCsource[1:0]), 
                      .o(PCIN[31:0]));
   extend26to28_shift2  XLXI_46 (.A(IRW[25:0]), 
                                .B(XLXN_65[27:0]));
   catch_28_4  XLXI_47 (.A(XLXN_65[27:0]), 
                       .B(PCW[31:28]), 
                       .C(XLXN_67[31:0]));
endmodule
